jobs:
  # https://docs.microsoft.com/azure/devops/pipelines/yaml-schema?view=azure-devops&tabs=schema
  # https://docs.microsoft.com/azure/devops/pipelines/agents/hosted?view=azure-devops#use-a-microsoft-hosted-agent
  # https://docs.microsoft.com/azure/devops/pipelines/build/variables?view=azure-devops&tabs=yaml
  - job: build_ps_WinLatest
    pool:
      vmImage: windows-latest
    steps:
      - powershell: |
          $PSVersionTable
          Install-Module -Name InvokeBuild -Force
          Install-Module -Name PSDepend -Force
          Invoke-PSDepend -Force
          Invoke-Build -File $(Build.SourcesDirectory)\src\SwissKnife.build.ps1
        displayName: "Build and Test - Windows PowerShell"
      - task: PublishTestResults@2
        inputs:
          testRunner: "NUnit"
          testResultsFiles: "**/out/testResults.xml"
          testRunTitle: "ps_winLatest"

  - job: build_pwsh_WinLatest
    pool:
      vmImage: windows-latest
    steps:
      - pwsh: |
          $PSVersionTable
          Install-Module -Name InvokeBuild -Force
          Install-Module -Name PSDepend -Force
          Invoke-PSDepend -Force
          Invoke-Build -File $(Build.SourcesDirectory)\src\SwissKnife.build.ps1
        displayName: "Build and Test - Windows pwsh"
      - task: PublishTestResults@2
        inputs:
          testRunner: "NUnit"
          testResultsFiles: "**/out/testResults.xml"
          testRunTitle: "pwsh_winLatest"
        # displayName: 'Publish Test Results'

  - job: build_pwsh_ubuntuLatest
    pool:
      vmImage: ubuntu-latest
    steps:
      - script: |
          sudo dpkg -i powershell_6.2.0-1.ubuntu.16.04_amd64.deb
          sudo apt-get install -f
        displayName: "Install PowerShell Core"
      - script: |
          pwsh -c '$PSVersionTable;Install-Module -Name InvokeBuild -Force;Install-Module -Name PSDepend -Force;Invoke-PSDepend -Force;Invoke-Build -File $(Build.SourcesDirectory)/src/SwissKnife.build.ps1'
        displayName: "Build and Test - Linux"
      - task: PublishTestResults@2
        inputs:
          testRunner: "NUnit"
          testResultsFiles: "**/out/testResults.xml"
          testRunTitle: "pwsh_ubuntuLatest"
        # displayName: 'Publish Test Results'

  - job: build_pwsh_macOSLatest
    pool:
      vmImage: macOS-latest
    steps:
      - script: |
          brew update
          brew tap caskroom/cask
          brew cask install powershell
        displayName: "Install PowerShell Core"
      - script: |
          pwsh -c '$PSVersionTable;Install-Module -Name InvokeBuild -Force;Install-Module -Name PSDepend -Force;Invoke-PSDepend -Force;Invoke-Build -File $(Build.SourcesDirectory)/src/SwissKnife.build.ps1'
        displayName: "Build and Test"
      - task: PublishTestResults@2
        inputs:
          testRunner: "NUnit"
          testResultsFiles: "**/out/testResults.xml"
          testRunTitle: "pwsh_macOSLatest"
        # displayName: 'Publish Test Results'
